name: Continuous integration

on:
  pull_request:
  schedule:
    - cron: "0 6 * * *"

jobs:
  check-unused-composer-dependencies:
    name: Check unused composer dependencies

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: 8.1
          tools: composer

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Restore composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-progress

      - name: Download composer unused
        run: curl -OL https://github.com/composer-unused/composer-unused/releases/latest/download/composer-unused.phar

      - name: Run composer unused
        run: |
          php composer-unused.phar --no-progress \
            --excludePackage=bensampo/laravel-enum \
            --excludePackage=guzzlehttp/guzzle \
            --excludePackage=laravel/tinker \

  static-code-analysis:
    name: Static code analysis

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: 8.1
          tools: composer, cs2pr

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Restore composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install

      - name: Run phpstan/phpstan
        run: vendor/bin/phpstan analyse --error-format=checkstyle | cs2pr

  tests:
    name: PHP tests

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: 'testing'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          php-version: 8.1
          tools: composer

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Restore composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install

      - name: Copy .env
        run: cp .env.testing.example .env.testing

      - name: Generate key
        run: php artisan key:generate --env=testing

      - name: Install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Run tests with phpunit/phpunit
        run: php artisan test --parallel --coverage-clover=coverage.xml
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Send code coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  automerge:
    name: Merge Dependabot

    runs-on: ubuntu-latest

    needs: tests

    steps:
      - name: Merge Dependabot
        uses: fastify/github-action-merge-dependabot@v3.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
